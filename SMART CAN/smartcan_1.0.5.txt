//libraries
  #include <Wire.h>
  #include <LiquidCrystal_I2C.h>
  #include <Servo.h>
//library assignment
  LiquidCrystal_I2C lcd(0x27, 16, 2);
  Servo myservo;
//assignment
  const int trigPin = 2;
  const int echoPin = 3;
  const int wodSensor = A3; 
//float is used to get the exact calculation with decimals (no float = whole number)
  float duration;
  float distanceCM;
//unsigned long
  unsigned long prevTime1 = millis();
  unsigned long prevTime2 = millis();
//boolean(true or false)
  bool lidOpen = false;

void setup(){
//baud of smonitor
  Serial.begin(9600);
//for us sensor
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
//for wod sensor
  pinMode(wodSensor, INPUT);
//for lcd 2 row 16 col
  lcd.init();
  lcd.backlight();
//lcd startup text
  lcd.setCursor(0,0);
  lcd.print("UNETHICAL CAN is");
  lcd.setCursor(0,1);
  lcd.print("Starting...");
  delay(3000);
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("I LOVE");
  lcd.setCursor(0,1);
  lcd.print("NEW JEANS!!"); 
  delay(700);
  lcd.clear();
//servo pin
  myservo.attach(4);

}

//activator of programs
void loop(){

  //activate program 1
    // clean signal
    digitalWrite(trigPin, LOW);
    delayMicroseconds(10);
  // send trigger signal
    digitalWrite(trigPin, HIGH);
    delayMicroseconds(10);
    digitalWrite(trigPin, LOW);
  //recieve the signal pulse
    duration = pulseIn(echoPin, HIGH);
  //convert the recieved pulse to measurements
    distanceCM = (duration * 0.034) / 2;
  //print the distance to the serial monitor
    Serial.print("Distance: ");
    Serial.print(distanceCM);
    Serial.print(" cm");
    Serial.println();
  //activate program 2 w/ smonitor (on line 79)
    int value = analogRead(wodSensor);
    Serial.print("Water: ");
    Serial.print(value);
    Serial.println();
//condition for action to lcd
  //wod Sensor
    if (value <= 50){
      lcd.setCursor(0, 0);
      lcd.print("Type: DRY");
    }else if(value > 50){
      lcd.setCursor(0, 0);
      lcd.print("                ");
      lcd.setCursor(0, 0);
      lcd.print("Type: WET");
    }

  //Close lid    
    if ((millis() - prevTime1 >= 6000) && distanceCM >= 10){
      myservo.write(0);
      prevTime1 = millis();
      lcd.setCursor(0, 1);
      lcd.print("State: Closed");
    } 
  //Open lid
    if ((millis() - prevTime2 >= 1000) && !lidOpen && distanceCM < 10){
      myservo.write(90);
      prevTime2 = millis();
            lidOpen = false;
      lcd.setCursor(0, 1);
      lcd.print("                ");
      lcd.setCursor(0, 1);
      lcd.print("State: Open");
    }
  //interval of the reading and lcd flickering
    delay(200);
}




